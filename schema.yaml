openapi: 3.0.3
info:
  title: ''
  version: 0.0.0
paths:
  /api/insights/daily-report/:
    get:
      operationId: api_insights_daily_report_retrieve
      description: API endpoint to generate and return daily personalized insights
        for the user.
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /api/insights/monthly-report/:
    get:
      operationId: api_insights_monthly_report_retrieve
      description: API endpoint to generate and return monthly personalized insights
        for the user.
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /api/insights/report/:
    get:
      operationId: api_insights_report_retrieve
      description: API endpoint to generate and return a custom personalized report
        based on the number of days.
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /api/insights/result/{task_id}/:
    get:
      operationId: api_insights_result_retrieve
      parameters:
      - in: path
        name: task_id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/insights/weekly-report/:
    get:
      operationId: api_insights_weekly_report_retrieve
      description: API endpoint to generate and return weekly personalized insights
        for the user.
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /api/schema/:
    get:
      operationId: api_schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - ckb
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - ms
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - ug
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /api/user/login/:
    post:
      operationId: api_user_login_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /api/user/refresh/:
    post:
      operationId: api_user_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /api/user/register/:
    post:
      operationId: api_user_register_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/wellness/fitness/:
    get:
      operationId: api_wellness_fitness_list
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FitnessActivity'
          description: ''
    post:
      operationId: api_wellness_fitness_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FitnessActivity'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FitnessActivity'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FitnessActivity'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FitnessActivity'
          description: ''
  /api/wellness/fitness/{id}/:
    get:
      operationId: api_wellness_fitness_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this fitness activity.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FitnessActivity'
          description: ''
    put:
      operationId: api_wellness_fitness_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this fitness activity.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FitnessActivity'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FitnessActivity'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FitnessActivity'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FitnessActivity'
          description: ''
    patch:
      operationId: api_wellness_fitness_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this fitness activity.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedFitnessActivity'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedFitnessActivity'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedFitnessActivity'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FitnessActivity'
          description: ''
    delete:
      operationId: api_wellness_fitness_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this fitness activity.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/wellness/meals/:
    get:
      operationId: api_wellness_meals_list
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Meal'
          description: ''
    post:
      operationId: api_wellness_meals_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Meal'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Meal'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Meal'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Meal'
          description: ''
  /api/wellness/meals/{id}/:
    get:
      operationId: api_wellness_meals_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this meal.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Meal'
          description: ''
    put:
      operationId: api_wellness_meals_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this meal.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Meal'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Meal'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Meal'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Meal'
          description: ''
    patch:
      operationId: api_wellness_meals_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this meal.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedMeal'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedMeal'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedMeal'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Meal'
          description: ''
    delete:
      operationId: api_wellness_meals_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this meal.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/wellness/sleep/:
    get:
      operationId: api_wellness_sleep_list
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SleepLog'
          description: ''
    post:
      operationId: api_wellness_sleep_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SleepLog'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SleepLog'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SleepLog'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SleepLog'
          description: ''
  /api/wellness/sleep/{id}/:
    get:
      operationId: api_wellness_sleep_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this sleep log.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SleepLog'
          description: ''
    put:
      operationId: api_wellness_sleep_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this sleep log.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SleepLog'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SleepLog'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SleepLog'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SleepLog'
          description: ''
    patch:
      operationId: api_wellness_sleep_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this sleep log.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSleepLog'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSleepLog'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSleepLog'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SleepLog'
          description: ''
    delete:
      operationId: api_wellness_sleep_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this sleep log.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
components:
  schemas:
    ActivityTypeEnum:
      enum:
      - Yoga
      - Running, 5 mph (12 minute mile)
      - Cycling, <10 mph, leisure bicycling
      - Swimming
      - Rock Climbing
      - Walking the dog
      - Soccer
      - Badminton
      - Baseball
      - Basketball
      - Frisbee
      - Golf
      - Boxing
      - Tennis
      - Hockey
      - Tai Chi
      - Football
      - Ping pong
      - Ice skating
      - Rollerblading
      - Kayaking
      type: string
      description: |-
        * `Yoga` - Yoga
        * `Running, 5 mph (12 minute mile)` - Running, 5 mph (12 minute mile)
        * `Cycling, <10 mph, leisure bicycling` - Cycling, <10 mph, leisure bicycling
        * `Swimming` - Swimming
        * `Rock Climbing` - Rock Climbing
        * `Walking the dog` - Walking the dog
        * `Soccer` - Soccer
        * `Badminton` - Badminton
        * `Baseball` - Baseball
        * `Basketball` - Basketball
        * `Frisbee` - Frisbee
        * `Golf` - Golf
        * `Boxing` - Boxing
        * `Tennis` - Tennis
        * `Hockey` - Hockey
        * `Tai Chi` - Tai Chi
        * `Football` - Football
        * `Ping pong` - Ping pong
        * `Ice skating` - Ice skating
        * `Rollerblading` - Rollerblading
        * `Kayaking` - Kayaking
    BlankEnum:
      enum:
      - ''
    FitnessActivity:
      type: object
      properties:
        user:
          type: integer
          readOnly: true
        activity_type:
          $ref: '#/components/schemas/ActivityTypeEnum'
        duration_minutes:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        date:
          type: string
          format: date
          readOnly: true
        calories:
          type: integer
          readOnly: true
      required:
      - activity_type
      - calories
      - date
      - duration_minutes
      - user
    Meal:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
          readOnly: true
        description:
          type: string
        date:
          type: string
          format: date
          readOnly: true
        calories:
          type: integer
          readOnly: true
      required:
      - calories
      - date
      - description
      - id
      - user
    NullEnum:
      enum:
      - null
    PatchedFitnessActivity:
      type: object
      properties:
        user:
          type: integer
          readOnly: true
        activity_type:
          $ref: '#/components/schemas/ActivityTypeEnum'
        duration_minutes:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        date:
          type: string
          format: date
          readOnly: true
        calories:
          type: integer
          readOnly: true
    PatchedMeal:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
          readOnly: true
        description:
          type: string
        date:
          type: string
          format: date
          readOnly: true
        calories:
          type: integer
          readOnly: true
    PatchedSleepLog:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
          readOnly: true
        hours:
          type: string
          format: decimal
          pattern: ^-?\d{0,2}(?:\.\d{0,2})?$
        quality:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/QualityEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        bedtime:
          type: string
          format: time
          nullable: true
        wakeup_time:
          type: string
          format: time
          nullable: true
        date:
          type: string
          format: date
          readOnly: true
    QualityEnum:
      enum:
      - poor
      - moderate
      - good
      type: string
      description: |-
        * `poor` - Poor
        * `moderate` - Moderate
        * `good` - Good
    SleepLog:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
          readOnly: true
        hours:
          type: string
          format: decimal
          pattern: ^-?\d{0,2}(?:\.\d{0,2})?$
        quality:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/QualityEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        bedtime:
          type: string
          format: time
          nullable: true
        wakeup_time:
          type: string
          format: time
          nullable: true
        date:
          type: string
          format: date
          readOnly: true
      required:
      - date
      - hours
      - id
      - user
    TokenObtainPair:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - password
      - refresh
      - username
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          writeOnly: true
      required:
      - access
      - refresh
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          maxLength: 254
        password:
          type: string
          writeOnly: true
          maxLength: 128
      required:
      - email
      - id
      - password
      - username
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
